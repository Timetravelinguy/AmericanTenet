<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget name="Main Window" parent="main_window">
  <Tab containers="1" tab_name="TAKEOFF">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockSplitter sizes="0.5;0.5" count="2" orientation="|">
      <DockSplitter sizes="0.50055;0.49945" count="2" orientation="-">
       <DockArea name="...">
        <plot style="Lines" flip_x="false" flip_y="false" mode="TimeSeries">
         <range right="336.004048" bottom="-3.582620" top="3.175309" left="47.397138"/>
         <limitY/>
         <curve name="/fmu/out/vehicle_local_position/ax" color="#1f77b4"/>
         <curve name="/fmu/out/vehicle_local_position/ay" color="#d62728"/>
         <curve name="/fmu/out/vehicle_local_position/az" color="#1ac938"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot style="Lines" flip_x="false" flip_y="false" mode="XYPlot">
         <range right="47.398057" bottom="8.547522" top="8.548281" left="47.396845"/>
         <limitY/>
         <curve name="/fmu/out/vehicle_global_position/l[at;on]" curve_y="/fmu/out/vehicle_global_position/lon" curve_x="/fmu/out/vehicle_global_position/lat" color="#ff7f0e"/>
        </plot>
       </DockArea>
      </DockSplitter>
      <DockArea name="...">
       <plot style="Lines" flip_x="false" flip_y="false" mode="TimeSeries">
        <range right="1.000000" bottom="0.000000" top="1.000000" left="0.000000"/>
        <limitY/>
       </plot>
      </DockArea>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="PREFLIGHT">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockArea name="...">
      <plot style="Lines" flip_x="false" flip_y="false" mode="TimeSeries">
       <range right="1.000000" bottom="0.000000" top="1.000000" left="0.000000"/>
       <limitY/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="HOVERING">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockArea name="...">
      <plot style="Lines" flip_x="false" flip_y="false" mode="TimeSeries">
       <range right="1.000000" bottom="0.000000" top="1.000000" left="0.000000"/>
       <limitY/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="LANDING">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockArea name="...">
      <plot style="Lines" flip_x="false" flip_y="false" mode="TimeSeries">
       <range right="1.000000" bottom="0.000000" top="1.000000" left="0.000000"/>
       <limitY/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="POSTFLIGHT">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockArea name="...">
      <plot style="Lines" flip_x="false" flip_y="false" mode="TimeSeries">
       <range right="1.000000" bottom="0.000000" top="1.000000" left="0.000000"/>
       <limitY/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="0"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <parameters time_axis="" delimiter="0"/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS2 bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value=""/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="ROS2 Topic Subscriber">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="false"/>
   <selected_topics value="/parameter_events;/rosout;/fmu/in/actuator_motors;/fmu/in/actuator_servos;/fmu/in/arming_check_reply_v1;/fmu/in/aux_global_position;/fmu/in/config_control_setpoints;/fmu/in/config_overrides_request;/fmu/in/distance_sensor;/fmu/in/fixed_wing_lateral_setpoint;/fmu/in/fixed_wing_longitudinal_setpoint;/fmu/in/goto_setpoint;/fmu/in/lateral_control_configuration;/fmu/in/longitudinal_control_configuration;/fmu/in/manual_control_input;/fmu/in/message_format_request;/fmu/in/mode_completed;/fmu/in/obstacle_distance;/fmu/in/offboard_control_mode;/fmu/in/onboard_computer_status;/fmu/in/register_ext_component_request;/fmu/in/sensor_optical_flow;/fmu/in/telemetry_status;/fmu/in/trajectory_setpoint;/fmu/in/unregister_ext_component;/fmu/in/vehicle_attitude_setpoint_v1;/fmu/in/vehicle_command;/fmu/in/vehicle_command_mode_executor;/fmu/in/vehicle_mocap_odometry;/fmu/in/vehicle_rates_setpoint;/fmu/in/vehicle_thrust_setpoint;/fmu/in/vehicle_torque_setpoint;/fmu/in/vehicle_visual_odometry;/fmu/out/airspeed_validated_v1;/fmu/out/arming_check_request;/fmu/out/battery_status_v1;/fmu/out/collision_constraints;/fmu/out/estimator_status_flags;/fmu/out/failsafe_flags;/fmu/out/home_position;/fmu/out/manual_control_setpoint;/fmu/out/message_format_response;/fmu/out/mode_completed;/fmu/out/position_setpoint_triplet;/fmu/out/register_ext_component_reply;/fmu/out/sensor_combined;/fmu/out/timesync_status;/fmu/out/vehicle_attitude;/fmu/out/vehicle_command_ack;/fmu/out/vehicle_control_mode;/fmu/out/vehicle_global_position;/fmu/out/vehicle_gps_position;/fmu/out/vehicle_land_detected;/fmu/out/vehicle_local_position;/fmu/out/vehicle_odometry;/fmu/out/vehicle_status_v1;/fmu/out/vtol_vehicle_status"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( sudo apt-get install spotify-clientnew_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indices, not Lua indices&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS2 Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

